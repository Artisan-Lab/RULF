### What it does
Checks for use of `.iter().nth()` (and the related
`.iter_mut().nth()`) on standard library types with *O*(1) element access.

### Why is this bad?
`.get()` and `.get_mut()` are more efficient and more
readable.

### Example
```
let some_vec = vec![0, 1, 2, 3];
let bad_vec = some_vec.iter().nth(3);
let bad_slice = &some_vec[..].iter().nth(3);
```
The correct use would be:
```
let some_vec = vec![0, 1, 2, 3];
let bad_vec = some_vec.get(3);
let bad_slice = &some_vec[..].get(3);
```