### What it does
Checks for using `x.get(x.len() - 1)` instead of
`x.last()`.

### Why is this bad?
Using `x.last()` is easier to read and has the same
result.

Note that using `x[x.len() - 1]` is semantically different from
`x.last()`.  Indexing into the array will panic on out-of-bounds
accesses, while `x.get()` and `x.last()` will return `None`.

There is another lint (get_unwrap) that covers the case of using
`x.get(index).unwrap()` instead of `x[index]`.

### Example
```
let x = vec![2, 3, 5];
let last_element = x.get(x.len() - 1);
```

Use instead:
```
let x = vec![2, 3, 5];
let last_element = x.last();
```