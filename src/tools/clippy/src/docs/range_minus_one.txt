### What it does
Checks for inclusive ranges where 1 is subtracted from
the upper bound, e.g., `x..=(y-1)`.

### Why is this bad?
The code is more readable with an exclusive range
like `x..y`.

### Known problems
This will cause a warning that cannot be fixed if
the consumer of the range only accepts a specific range type, instead of
the generic `RangeBounds` trait
([#3307](https://github.com/rust-lang/rust-clippy/issues/3307)).

### Example
```
for i in x..=(y-1) {
    // ..
}
```

Use instead:
```
for i in x..y {
    // ..
}
```