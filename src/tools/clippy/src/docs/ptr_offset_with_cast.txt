### What it does
Checks for usage of the `offset` pointer method with a `usize` casted to an
`isize`.

### Why is this bad?
If weâ€™re always increasing the pointer address, we can avoid the numeric
cast by using the `add` method instead.

### Example
```
let vec = vec![b'a', b'b', b'c'];
let ptr = vec.as_ptr();
let offset = 1_usize;

unsafe {
    ptr.offset(offset as isize);
}
```

Could be written:

```
let vec = vec![b'a', b'b', b'c'];
let ptr = vec.as_ptr();
let offset = 1_usize;

unsafe {
    ptr.add(offset);
}
```