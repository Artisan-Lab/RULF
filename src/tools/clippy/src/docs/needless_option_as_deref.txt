### What it does
Checks for no-op uses of `Option::{as_deref, as_deref_mut}`,
for example, `Option<&T>::as_deref()` returns the same type.

### Why is this bad?
Redundant code and improving readability.

### Example
```
let a = Some(&1);
let b = a.as_deref(); // goes from Option<&i32> to Option<&i32>
```

Use instead:
```
let a = Some(&1);
let b = a;
```