### What it does
Checks for usages of `str::splitn` (or `str::rsplitn`) where using `str::split` would be the same.
### Why is this bad?
The function `split` is simpler and there is no performance difference in these cases, considering
that both functions return a lazy iterator.
### Example
```
let str = "key=value=add";
let _ = str.splitn(3, '=').next().unwrap();
```

Use instead:
```
let str = "key=value=add";
let _ = str.split('=').next().unwrap();
```