### What it does
Checks for comparisons with an address of a trait vtable.

### Why is this bad?
Comparing trait objects pointers compares an vtable addresses which
are not guaranteed to be unique and could vary between different code generation units.
Furthermore vtables for different types could have the same address after being merged
together.

### Example
```
let a: Rc<dyn Trait> = ...
let b: Rc<dyn Trait> = ...
if Rc::ptr_eq(&a, &b) {
    ...
}
```