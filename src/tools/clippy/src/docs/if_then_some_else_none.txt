### What it does
Checks for if-else that could be written using either `bool::then` or `bool::then_some`.

### Why is this bad?
Looks a little redundant. Using `bool::then` is more concise and incurs no loss of clarity.
For simple calculations and known values, use `bool::then_some`, which is eagerly evaluated
in comparison to `bool::then`.

### Example
```
let a = if v.is_empty() {
    println!("true!");
    Some(42)
} else {
    None
};
```

Could be written:

```
let a = v.is_empty().then(|| {
    println!("true!");
    42
});
```