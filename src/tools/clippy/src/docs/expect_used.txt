### What it does
Checks for `.expect()` or `.expect_err()` calls on `Result`s and `.expect()` call on `Option`s.

### Why is this bad?
Usually it is better to handle the `None` or `Err` case.
Still, for a lot of quick-and-dirty code, `expect` is a good choice, which is why
this lint is `Allow` by default.

`result.expect()` will let the thread panic on `Err`
values. Normally, you want to implement more sophisticated error handling,
and propagate errors upwards with `?` operator.

### Examples
```
option.expect("one");
result.expect("one");
```

Use instead:
```
option?;

// or

result?;
```