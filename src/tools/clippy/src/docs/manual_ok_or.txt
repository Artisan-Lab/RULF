### What it does

Finds patterns that reimplement `Option::ok_or`.

### Why is this bad?

Concise code helps focusing on behavior instead of boilerplate.

### Examples
```
let foo: Option<i32> = None;
foo.map_or(Err("error"), |v| Ok(v));
```

Use instead:
```
let foo: Option<i32> = None;
foo.ok_or("error");
```