### What it does
Checks for usage of indexing or slicing. Arrays are special cases, this lint
does report on arrays if we can tell that slicing operations are in bounds and does not
lint on constant `usize` indexing on arrays because that is handled by rustc's `const_err` lint.

### Why is this bad?
Indexing and slicing can panic at runtime and there are
safe alternatives.

### Example
```
// Vector
let x = vec![0; 5];

x[2];
&x[2..100];

// Array
let y = [0, 1, 2, 3];

&y[10..100];
&y[10..];
```

Use instead:
```

x.get(2);
x.get(2..100);

y.get(10);
y.get(10..100);
```