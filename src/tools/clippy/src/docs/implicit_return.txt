### What it does
Checks for missing return statements at the end of a block.

### Why is this bad?
Actually omitting the return keyword is idiomatic Rust code. Programmers
coming from other languages might prefer the expressiveness of `return`. It's possible to miss
the last returning statement because the only difference is a missing `;`. Especially in bigger
code with multiple return paths having a `return` keyword makes it easier to find the
corresponding statements.

### Example
```
fn foo(x: usize) -> usize {
    x
}
```
add return
```
fn foo(x: usize) -> usize {
    return x;
}
```