// MIR for `hey` 0 mir_map

fn hey(_1: &[T]) -> () {
    debug it => _1;                      // in scope 0 at $DIR/issue-91633.rs:+0:12: +0:14
    let mut _0: ();                      // return place in scope 0 at $DIR/issue-91633.rs:+1:2: +1:2
    let mut _2: &<[T] as std::ops::Index<usize>>::Output; // in scope 0 at $DIR/issue-91633.rs:+4:14: +4:20
    let _3: &<[T] as std::ops::Index<usize>>::Output; // in scope 0 at $DIR/issue-91633.rs:+4:15: +4:20
    let mut _4: &[T];                    // in scope 0 at $DIR/issue-91633.rs:+4:15: +4:17
    scope 1 {
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at $DIR/issue-91633.rs:+4:14: +4:20
        StorageLive(_3);                 // scope 0 at $DIR/issue-91633.rs:+4:15: +4:20
        StorageLive(_4);                 // scope 0 at $DIR/issue-91633.rs:+4:15: +4:17
        _4 = &(*_1);                     // scope 0 at $DIR/issue-91633.rs:+4:15: +4:17
        _3 = <[T] as Index<usize>>::index(move _4, const 0_usize) -> [return: bb1, unwind: bb2]; // scope 0 at $DIR/issue-91633.rs:+4:15: +4:20
                                         // mir::Constant
                                         // + span: $DIR/issue-91633.rs:7:15: 7:20
                                         // + literal: Const { ty: for<'a> fn(&'a [T], usize) -> &'a <[T] as Index<usize>>::Output {<[T] as Index<usize>>::index}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at $DIR/issue-91633.rs:+4:19: +4:20
        _2 = &(*_3);                     // scope 0 at $DIR/issue-91633.rs:+4:14: +4:20
        StorageDead(_2);                 // scope 0 at $DIR/issue-91633.rs:+4:20: +4:21
        _0 = const ();                   // scope 0 at $DIR/issue-91633.rs:+3:2: +5:3
        StorageDead(_3);                 // scope 0 at $DIR/issue-91633.rs:+5:2: +5:3
        return;                          // scope 0 at $DIR/issue-91633.rs:+5:3: +5:3
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at $DIR/issue-91633.rs:+0:1: +5:3
    }
}
