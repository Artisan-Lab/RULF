- // MIR for `cycle` before DeadStoreElimination
+ // MIR for `cycle` after DeadStoreElimination
  
  fn cycle(_1: i32, _2: i32, _3: i32) -> () {
      debug x => _1;                       // in scope 0 at $DIR/cycle.rs:+0:10: +0:15
      debug y => _2;                       // in scope 0 at $DIR/cycle.rs:+0:22: +0:27
      debug z => _3;                       // in scope 0 at $DIR/cycle.rs:+0:34: +0:39
      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:+0:46: +0:46
      let mut _4: ();                      // in scope 0 at $DIR/cycle.rs:+0:1: +9:2
      let mut _5: bool;                    // in scope 0 at $DIR/cycle.rs:+3:11: +3:17
      let _6: i32;                         // in scope 0 at $DIR/cycle.rs:+4:13: +4:17
      let mut _7: i32;                     // in scope 0 at $DIR/cycle.rs:+5:13: +5:14
      let mut _8: i32;                     // in scope 0 at $DIR/cycle.rs:+6:13: +6:14
      let mut _9: i32;                     // in scope 0 at $DIR/cycle.rs:+7:13: +7:17
      let mut _10: !;                      // in scope 0 at $DIR/cycle.rs:+3:5: +8:6
      let _11: ();                         // in scope 0 at $DIR/cycle.rs:+3:5: +8:6
      let mut _12: !;                      // in scope 0 at $DIR/cycle.rs:+3:5: +8:6
      scope 1 {
          debug temp => _6;                // in scope 1 at $DIR/cycle.rs:+4:13: +4:17
      }
  
      bb0: {
          goto -> bb1;                     // scope 0 at $DIR/cycle.rs:+3:5: +8:6
      }
  
      bb1: {
          StorageLive(_5);                 // scope 0 at $DIR/cycle.rs:+3:11: +3:17
          _5 = cond() -> bb2;              // scope 0 at $DIR/cycle.rs:+3:11: +3:17
                                           // mir::Constant
                                           // + span: $DIR/cycle.rs:12:11: 12:15
                                           // + literal: Const { ty: fn() -> bool {cond}, val: Value(<ZST>) }
      }
  
      bb2: {
          switchInt(move _5) -> [false: bb4, otherwise: bb3]; // scope 0 at $DIR/cycle.rs:+3:11: +3:17
      }
  
      bb3: {
          StorageLive(_6);                 // scope 0 at $DIR/cycle.rs:+4:13: +4:17
-         _6 = _3;                         // scope 0 at $DIR/cycle.rs:+4:20: +4:21
+         nop;                             // scope 0 at $DIR/cycle.rs:+4:20: +4:21
          StorageLive(_7);                 // scope 1 at $DIR/cycle.rs:+5:13: +5:14
-         _7 = _2;                         // scope 1 at $DIR/cycle.rs:+5:13: +5:14
-         _3 = move _7;                    // scope 1 at $DIR/cycle.rs:+5:9: +5:14
+         nop;                             // scope 1 at $DIR/cycle.rs:+5:13: +5:14
+         nop;                             // scope 1 at $DIR/cycle.rs:+5:9: +5:14
          StorageDead(_7);                 // scope 1 at $DIR/cycle.rs:+5:13: +5:14
          StorageLive(_8);                 // scope 1 at $DIR/cycle.rs:+6:13: +6:14
-         _8 = _1;                         // scope 1 at $DIR/cycle.rs:+6:13: +6:14
-         _2 = move _8;                    // scope 1 at $DIR/cycle.rs:+6:9: +6:14
+         nop;                             // scope 1 at $DIR/cycle.rs:+6:13: +6:14
+         nop;                             // scope 1 at $DIR/cycle.rs:+6:9: +6:14
          StorageDead(_8);                 // scope 1 at $DIR/cycle.rs:+6:13: +6:14
          StorageLive(_9);                 // scope 1 at $DIR/cycle.rs:+7:13: +7:17
-         _9 = _6;                         // scope 1 at $DIR/cycle.rs:+7:13: +7:17
-         _1 = move _9;                    // scope 1 at $DIR/cycle.rs:+7:9: +7:17
+         nop;                             // scope 1 at $DIR/cycle.rs:+7:13: +7:17
+         nop;                             // scope 1 at $DIR/cycle.rs:+7:9: +7:17
          StorageDead(_9);                 // scope 1 at $DIR/cycle.rs:+7:16: +7:17
-         _4 = const ();                   // scope 0 at $DIR/cycle.rs:+3:18: +8:6
+         nop;                             // scope 0 at $DIR/cycle.rs:+3:18: +8:6
          StorageDead(_6);                 // scope 0 at $DIR/cycle.rs:+8:5: +8:6
          StorageDead(_5);                 // scope 0 at $DIR/cycle.rs:+8:5: +8:6
          goto -> bb1;                     // scope 0 at $DIR/cycle.rs:+3:5: +8:6
      }
  
      bb4: {
          StorageLive(_11);                // scope 0 at $DIR/cycle.rs:+3:5: +8:6
          _0 = const ();                   // scope 0 at $DIR/cycle.rs:+3:5: +8:6
          StorageDead(_11);                // scope 0 at $DIR/cycle.rs:+8:5: +8:6
          StorageDead(_5);                 // scope 0 at $DIR/cycle.rs:+8:5: +8:6
          return;                          // scope 0 at $DIR/cycle.rs:+9:2: +9:2
      }
  }
  
