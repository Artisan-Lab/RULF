// MIR for `match_bool` 0 mir_map

fn match_bool(_1: bool) -> usize {
    debug x => _1;                       // in scope 0 at $DIR/simple-match.rs:+0:15: +0:16
    let mut _0: usize;                   // return place in scope 0 at $DIR/simple-match.rs:+0:27: +0:32

    bb0: {
        FakeRead(ForMatchedPlace(None), _1); // scope 0 at $DIR/simple-match.rs:+1:11: +1:12
        switchInt(_1) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/simple-match.rs:+1:5: +1:12
    }

    bb1: {
        falseEdge -> [real: bb3, imaginary: bb2]; // scope 0 at $DIR/simple-match.rs:+2:9: +2:13
    }

    bb2: {
        _0 = const 20_usize;             // scope 0 at $DIR/simple-match.rs:+3:14: +3:16
        goto -> bb4;                     // scope 0 at $DIR/simple-match.rs:+3:14: +3:16
    }

    bb3: {
        _0 = const 10_usize;             // scope 0 at $DIR/simple-match.rs:+2:17: +2:19
        goto -> bb4;                     // scope 0 at $DIR/simple-match.rs:+2:17: +2:19
    }

    bb4: {
        return;                          // scope 0 at $DIR/simple-match.rs:+5:2: +5:2
    }
}
