// MIR for `main` after ConstProp

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at $DIR/const_allocation3.rs:+0:11: +0:11
    let _1: &Packed;                     // in scope 0 at $DIR/const_allocation3.rs:+1:5: +1:8
    let mut _2: &&Packed;                // in scope 0 at $DIR/const_allocation3.rs:+1:5: +1:8

    bb0: {
        StorageLive(_1);                 // scope 0 at $DIR/const_allocation3.rs:+1:5: +1:8
        StorageLive(_2);                 // scope 0 at $DIR/const_allocation3.rs:+1:5: +1:8
        _2 = const {alloc1: &&Packed};   // scope 0 at $DIR/const_allocation3.rs:+1:5: +1:8
                                         // mir::Constant
                                         // + span: $DIR/const_allocation3.rs:5:5: 5:8
                                         // + literal: Const { ty: &&Packed, val: Value(Scalar(alloc1)) }
        _1 = (*_2);                      // scope 0 at $DIR/const_allocation3.rs:+1:5: +1:8
        StorageDead(_2);                 // scope 0 at $DIR/const_allocation3.rs:+1:8: +1:9
        StorageDead(_1);                 // scope 0 at $DIR/const_allocation3.rs:+1:8: +1:9
        nop;                             // scope 0 at $DIR/const_allocation3.rs:+0:11: +2:2
        return;                          // scope 0 at $DIR/const_allocation3.rs:+2:2: +2:2
    }
}

alloc1 (static: FOO, size: 8, align: 8) {
    ╾───────alloc11───────╼                         │ ╾──────╼
}

alloc11 (size: 180, align: 1) {
    0x00 │ ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab │ ................
    0x10 │ ab ab ab ab ab ab ab ab ab ab ab ab ╾──alloc6── │ ............╾───
    0x20 │ ──────────╼ 01 ef cd ab 00 00 00 00 00 00 00 00 │ ───╼............
    0x30 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x40 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x50 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x60 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x70 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x80 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ╾──── │ ..............╾─
    0x90 │ ─────alloc8─────╼ 00 00 ╾─────alloc9+0x63─────╼ │ ─────╼..╾──────╼
    0xa0 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0xb0 │ 00 00 00 00                                     │ ....
}

alloc6 (size: 4, align: 4) {
    2a 00 00 00                                     │ *...
}

alloc8 (fn: main)

alloc9 (size: 100, align: 1) {
    0x00 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x10 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x20 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x30 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x40 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x50 │ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 │ ................
    0x60 │ 00 00 00 00                                     │ ....
}
