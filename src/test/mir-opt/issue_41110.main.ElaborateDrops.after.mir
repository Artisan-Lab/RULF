// MIR for `main` after ElaborateDrops

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at $DIR/issue-41110.rs:+0:11: +0:11
    let _1: ();                          // in scope 0 at $DIR/issue-41110.rs:+1:9: +1:10
    let mut _2: S;                       // in scope 0 at $DIR/issue-41110.rs:+1:13: +1:14
    let mut _3: S;                       // in scope 0 at $DIR/issue-41110.rs:+1:21: +1:27
    let mut _4: S;                       // in scope 0 at $DIR/issue-41110.rs:+1:21: +1:22
    let mut _5: bool;                    // in scope 0 at $DIR/issue-41110.rs:+1:27: +1:28
    scope 1 {
        debug x => _1;                   // in scope 1 at $DIR/issue-41110.rs:+1:9: +1:10
    }

    bb0: {
        _5 = const false;                // scope 0 at $DIR/issue-41110.rs:+1:9: +1:10
        StorageLive(_1);                 // scope 0 at $DIR/issue-41110.rs:+1:9: +1:10
        StorageLive(_2);                 // scope 0 at $DIR/issue-41110.rs:+1:13: +1:14
        _5 = const true;                 // scope 0 at $DIR/issue-41110.rs:+1:13: +1:14
        _2 = S;                          // scope 0 at $DIR/issue-41110.rs:+1:13: +1:14
        StorageLive(_3);                 // scope 0 at $DIR/issue-41110.rs:+1:21: +1:27
        StorageLive(_4);                 // scope 0 at $DIR/issue-41110.rs:+1:21: +1:22
        _4 = S;                          // scope 0 at $DIR/issue-41110.rs:+1:21: +1:22
        _3 = S::id(move _4) -> [return: bb1, unwind: bb4]; // scope 0 at $DIR/issue-41110.rs:+1:21: +1:27
                                         // mir::Constant
                                         // + span: $DIR/issue-41110.rs:8:23: 8:25
                                         // + literal: Const { ty: fn(S) -> S {S::id}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_4);                 // scope 0 at $DIR/issue-41110.rs:+1:26: +1:27
        _5 = const false;                // scope 0 at $DIR/issue-41110.rs:+1:13: +1:28
        _1 = S::other(move _2, move _3) -> [return: bb2, unwind: bb3]; // scope 0 at $DIR/issue-41110.rs:+1:13: +1:28
                                         // mir::Constant
                                         // + span: $DIR/issue-41110.rs:8:15: 8:20
                                         // + literal: Const { ty: fn(S, S) {S::other}, val: Value(<ZST>) }
    }

    bb2: {
        StorageDead(_3);                 // scope 0 at $DIR/issue-41110.rs:+1:27: +1:28
        _5 = const false;                // scope 0 at $DIR/issue-41110.rs:+1:27: +1:28
        StorageDead(_2);                 // scope 0 at $DIR/issue-41110.rs:+1:27: +1:28
        _0 = const ();                   // scope 0 at $DIR/issue-41110.rs:+0:11: +2:2
        StorageDead(_1);                 // scope 0 at $DIR/issue-41110.rs:+2:1: +2:2
        return;                          // scope 0 at $DIR/issue-41110.rs:+2:2: +2:2
    }

    bb3 (cleanup): {
        goto -> bb5;                     // scope 0 at $DIR/issue-41110.rs:+1:27: +1:28
    }

    bb4 (cleanup): {
        goto -> bb5;                     // scope 0 at $DIR/issue-41110.rs:+1:26: +1:27
    }

    bb5 (cleanup): {
        goto -> bb8;                     // scope 0 at $DIR/issue-41110.rs:+1:27: +1:28
    }

    bb6 (cleanup): {
        resume;                          // scope 0 at $DIR/issue-41110.rs:+0:1: +2:2
    }

    bb7 (cleanup): {
        drop(_2) -> bb6;                 // scope 0 at $DIR/issue-41110.rs:+1:27: +1:28
    }

    bb8 (cleanup): {
        switchInt(_5) -> [false: bb6, otherwise: bb7]; // scope 0 at $DIR/issue-41110.rs:+1:27: +1:28
    }
}
