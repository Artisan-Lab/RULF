- // MIR for `baz` before DestinationPropagation
+ // MIR for `baz` after DestinationPropagation
  
  fn baz(_1: i32) -> () {
      debug x => _1;                       // in scope 0 at $DIR/copy_propagation_arg.rs:+0:8: +0:13
      let mut _0: ();                      // return place in scope 0 at $DIR/copy_propagation_arg.rs:+0:20: +0:20
      let mut _2: i32;                     // in scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
  
      bb0: {
          StorageLive(_2);                 // scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
          nop;                             // scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
          nop;                             // scope 0 at $DIR/copy_propagation_arg.rs:+2:5: +2:10
          StorageDead(_2);                 // scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
          nop;                             // scope 0 at $DIR/copy_propagation_arg.rs:+0:20: +3:2
          return;                          // scope 0 at $DIR/copy_propagation_arg.rs:+3:2: +3:2
      }
  }
  
