- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/issue-66971.rs:+0:11: +0:11
      let _1: ();                          // in scope 0 at $DIR/issue-66971.rs:+1:5: +1:23
      let mut _2: ((), u8, u8);            // in scope 0 at $DIR/issue-66971.rs:+1:12: +1:22
      let mut _3: ();                      // in scope 0 at $DIR/issue-66971.rs:+1:13: +1:15
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/issue-66971.rs:+1:5: +1:23
          StorageLive(_2);                 // scope 0 at $DIR/issue-66971.rs:+1:12: +1:22
          StorageLive(_3);                 // scope 0 at $DIR/issue-66971.rs:+1:13: +1:15
          nop;                             // scope 0 at $DIR/issue-66971.rs:+1:13: +1:15
          Deinit(_2);                      // scope 0 at $DIR/issue-66971.rs:+1:12: +1:22
          nop;                             // scope 0 at $DIR/issue-66971.rs:+1:12: +1:22
          (_2.1: u8) = const 0_u8;         // scope 0 at $DIR/issue-66971.rs:+1:12: +1:22
          (_2.2: u8) = const 0_u8;         // scope 0 at $DIR/issue-66971.rs:+1:12: +1:22
          StorageDead(_3);                 // scope 0 at $DIR/issue-66971.rs:+1:21: +1:22
          _1 = encode(move _2) -> bb1;     // scope 0 at $DIR/issue-66971.rs:+1:5: +1:23
                                           // mir::Constant
                                           // + span: $DIR/issue-66971.rs:17:5: 17:11
                                           // + literal: Const { ty: fn(((), u8, u8)) {encode}, val: Value(<ZST>) }
      }
  
      bb1: {
          StorageDead(_2);                 // scope 0 at $DIR/issue-66971.rs:+1:22: +1:23
          StorageDead(_1);                 // scope 0 at $DIR/issue-66971.rs:+1:23: +1:24
          nop;                             // scope 0 at $DIR/issue-66971.rs:+0:11: +2:2
          return;                          // scope 0 at $DIR/issue-66971.rs:+2:2: +2:2
      }
  }
  
