- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/checked_add.rs:+0:11: +0:11
      let _1: u32;                         // in scope 0 at $DIR/checked_add.rs:+1:9: +1:10
      let mut _2: (u32, bool);             // in scope 0 at $DIR/checked_add.rs:+1:18: +1:23
      scope 1 {
          debug x => _1;                   // in scope 1 at $DIR/checked_add.rs:+1:9: +1:10
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/checked_add.rs:+1:9: +1:10
-         _2 = CheckedAdd(const 1_u32, const 1_u32); // scope 0 at $DIR/checked_add.rs:+1:18: +1:23
-         assert(!move (_2.1: bool), "attempt to compute `{} + {}`, which would overflow", const 1_u32, const 1_u32) -> bb1; // scope 0 at $DIR/checked_add.rs:+1:18: +1:23
+         _2 = const (2_u32, false);       // scope 0 at $DIR/checked_add.rs:+1:18: +1:23
+         assert(!const false, "attempt to compute `{} + {}`, which would overflow", const 1_u32, const 1_u32) -> bb1; // scope 0 at $DIR/checked_add.rs:+1:18: +1:23
      }
  
      bb1: {
-         _1 = move (_2.0: u32);           // scope 0 at $DIR/checked_add.rs:+1:18: +1:23
+         _1 = const 2_u32;                // scope 0 at $DIR/checked_add.rs:+1:18: +1:23
          _0 = const ();                   // scope 0 at $DIR/checked_add.rs:+0:11: +2:2
          StorageDead(_1);                 // scope 0 at $DIR/checked_add.rs:+2:1: +2:2
          return;                          // scope 0 at $DIR/checked_add.rs:+2:2: +2:2
      }
  }
  
