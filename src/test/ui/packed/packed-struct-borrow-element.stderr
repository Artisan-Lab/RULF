warning: reference to packed field is unaligned
  --> $DIR/packed-struct-borrow-element.rs:26:15
   |
LL |     let brw = &foo.baz;
   |               ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)
   = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)
note: the lint level is defined here
  --> $DIR/packed-struct-borrow-element.rs:23:8
   |
LL | #[warn(unaligned_references)]
   |        ^^^^^^^^^^^^^^^^^^^^

warning: reference to packed field is unaligned
  --> $DIR/packed-struct-borrow-element.rs:31:15
   |
LL |     let brw = &foo.baz;
   |               ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)
   = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)

warning: 2 warnings emitted

Future incompatibility report: Future breakage diagnostic:
warning: reference to packed field is unaligned
  --> $DIR/packed-struct-borrow-element.rs:26:15
   |
LL |     let brw = &foo.baz;
   |               ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)
   = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)
note: the lint level is defined here
  --> $DIR/packed-struct-borrow-element.rs:23:8
   |
LL | #[warn(unaligned_references)]
   |        ^^^^^^^^^^^^^^^^^^^^

Future breakage diagnostic:
warning: reference to packed field is unaligned
  --> $DIR/packed-struct-borrow-element.rs:31:15
   |
LL |     let brw = &foo.baz;
   |               ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
   = note: fields of packed structs are not properly aligned, and creating a misaligned reference is undefined behavior (even if that reference is never dereferenced)
   = help: copy the field contents to a local variable, or replace the reference with a raw pointer and use `read_unaligned`/`write_unaligned` (loads and stores via `*p` must be properly aligned even when using raw pointers)
note: the lint level is defined here
  --> $DIR/packed-struct-borrow-element.rs:23:8
   |
LL | #[warn(unaligned_references)]
   |        ^^^^^^^^^^^^^^^^^^^^

