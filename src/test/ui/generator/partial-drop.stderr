error: generator cannot be sent between threads safely
  --> $DIR/partial-drop.rs:14:17
   |
LL |       assert_send(|| {
   |  _________________^
LL | |
LL | |         // FIXME: it would be nice to make this work.
LL | |         let guard = Bar { foo: Foo, x: 42 };
LL | |         drop(guard.foo);
LL | |         yield;
LL | |     });
   | |_____^ generator is not `Send`
   |
   = help: within `[generator@$DIR/partial-drop.rs:14:17: 14:19]`, the trait `Send` is not implemented for `Foo`
note: generator is not `Send` as this value is used across a yield
  --> $DIR/partial-drop.rs:19:9
   |
LL |         let guard = Bar { foo: Foo, x: 42 };
   |             ----- has type `Bar` which is not `Send`
LL |         drop(guard.foo);
LL |         yield;
   |         ^^^^^ yield occurs here, with `guard` maybe used later
LL |     });
   |     - `guard` is later dropped here
note: required by a bound in `assert_send`
  --> $DIR/partial-drop.rs:42:19
   |
LL | fn assert_send<T: Send>(_: T) {}
   |                   ^^^^ required by this bound in `assert_send`

error: generator cannot be sent between threads safely
  --> $DIR/partial-drop.rs:22:17
   |
LL |       assert_send(|| {
   |  _________________^
LL | |
LL | |         // FIXME: it would be nice to make this work.
LL | |         let guard = Bar { foo: Foo, x: 42 };
...  |
LL | |         yield;
LL | |     });
   | |_____^ generator is not `Send`
   |
   = help: within `[generator@$DIR/partial-drop.rs:22:17: 22:19]`, the trait `Send` is not implemented for `Foo`
note: generator is not `Send` as this value is used across a yield
  --> $DIR/partial-drop.rs:29:9
   |
LL |         let guard = Bar { foo: Foo, x: 42 };
   |             ----- has type `Bar` which is not `Send`
...
LL |         yield;
   |         ^^^^^ yield occurs here, with `guard` maybe used later
LL |     });
   |     - `guard` is later dropped here
note: required by a bound in `assert_send`
  --> $DIR/partial-drop.rs:42:19
   |
LL | fn assert_send<T: Send>(_: T) {}
   |                   ^^^^ required by this bound in `assert_send`

error: generator cannot be sent between threads safely
  --> $DIR/partial-drop.rs:32:17
   |
LL |       assert_send(|| {
   |  _________________^
LL | |
LL | |         // FIXME: it would be nice to make this work.
LL | |         let guard = Bar { foo: Foo, x: 42 };
...  |
LL | |         yield;
LL | |     });
   | |_____^ generator is not `Send`
   |
   = help: within `[generator@$DIR/partial-drop.rs:32:17: 32:19]`, the trait `Send` is not implemented for `Foo`
note: generator is not `Send` as this value is used across a yield
  --> $DIR/partial-drop.rs:38:9
   |
LL |         let guard = Bar { foo: Foo, x: 42 };
   |             ----- has type `Bar` which is not `Send`
...
LL |         yield;
   |         ^^^^^ yield occurs here, with `guard` maybe used later
LL |     });
   |     - `guard` is later dropped here
note: required by a bound in `assert_send`
  --> $DIR/partial-drop.rs:42:19
   |
LL | fn assert_send<T: Send>(_: T) {}
   |                   ^^^^ required by this bound in `assert_send`

error: aborting due to 3 previous errors

