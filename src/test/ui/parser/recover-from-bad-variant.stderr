error: invalid `struct` delimiters or `fn` call arguments
  --> $DIR/recover-from-bad-variant.rs:7:13
   |
LL |     let x = Enum::Foo(a: 3, b: 4);
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
help: if `Enum::Foo` is a struct, use braces as delimiters
   |
LL |     let x = Enum::Foo { a: 3, b: 4 };
   |                       ~            ~
help: if `Enum::Foo` is a function, use the arguments directly
   |
LL -     let x = Enum::Foo(a: 3, b: 4);
LL +     let x = Enum::Foo(3, 4);
   |

error[E0532]: expected tuple struct or tuple variant, found struct variant `Enum::Foo`
  --> $DIR/recover-from-bad-variant.rs:10:9
   |
LL |     Foo { a: usize, b: usize },
   |     -------------------------- `Enum::Foo` defined here
...
LL |         Enum::Foo(a, b) => {}
   |         ^^^^^^^^^^^^^^^ help: use struct pattern syntax instead: `Enum::Foo { a, b }`

error[E0769]: tuple variant `Enum::Bar` written as struct variant
  --> $DIR/recover-from-bad-variant.rs:12:9
   |
LL |         Enum::Bar { a, b } => {}
   |         ^^^^^^^^^^^^^^^^^^
   |
help: use the tuple variant pattern syntax instead
   |
LL |         Enum::Bar(a, b) => {}
   |                  ~~~~~~

error: aborting due to 3 previous errors

Some errors have detailed explanations: E0532, E0769.
For more information about an error, try `rustc --explain E0532`.
