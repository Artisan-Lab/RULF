note: external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:38:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: no_relationships_late::<'_#1r, '_#2r, T>::{closure#0} with closure substs [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#3r ()>, T)),
               (),
           ]
   = note: late-bound region is '_#4r
   = note: number of external vids: 5
   = note: where <T as Anything<ReEarlyBound(0, 'b), ReEarlyBound(1, 'c)>>::AssocType: '_#3r

note: no external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:34:1
   |
LL | / fn no_relationships_late<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b, 'c>,
   | |________________________^
   |
   = note: defining type: no_relationships_late::<'_#1r, '_#2r, T>

error[E0309]: the associated type `<T as Anything<ReEarlyBound(0, 'b), ReEarlyBound(1, 'c)>>::AssocType` may not live long enough
  --> $DIR/projection-two-region-trait-bound-closure.rs:38:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding an explicit lifetime bound `<T as Anything<ReEarlyBound(0, 'b), ReEarlyBound(1, 'c)>>::AssocType: 'a`...
   = note: ...so that the type `<T as Anything<ReEarlyBound(0, 'b), ReEarlyBound(1, 'c)>>::AssocType` will meet its required lifetime bounds

note: external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:48:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: no_relationships_early::<'_#1r, '_#2r, '_#3r, T>::{closure#0} with closure substs [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#4r ()>, T)),
               (),
           ]
   = note: number of external vids: 5
   = note: where <T as Anything<ReEarlyBound(1, 'b), ReEarlyBound(2, 'c)>>::AssocType: '_#4r

note: no external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:43:1
   |
LL | / fn no_relationships_early<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b, 'c>,
LL | |     'a: 'a,
   | |___________^
   |
   = note: defining type: no_relationships_early::<'_#1r, '_#2r, '_#3r, T>

error[E0309]: the associated type `<T as Anything<ReEarlyBound(1, 'b), ReEarlyBound(2, 'c)>>::AssocType` may not live long enough
  --> $DIR/projection-two-region-trait-bound-closure.rs:48:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding an explicit lifetime bound `<T as Anything<ReEarlyBound(1, 'b), ReEarlyBound(2, 'c)>>::AssocType: 'a`...
   = note: ...so that the type `<T as Anything<ReEarlyBound(1, 'b), ReEarlyBound(2, 'c)>>::AssocType` will meet its required lifetime bounds

note: external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:61:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: projection_outlives::<'_#1r, '_#2r, '_#3r, T>::{closure#0} with closure substs [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#4r ()>, T)),
               (),
           ]
   = note: number of external vids: 5
   = note: where <T as Anything<ReEarlyBound(1, 'b), ReEarlyBound(2, 'c)>>::AssocType: '_#4r

note: no external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:53:1
   |
LL | / fn projection_outlives<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b, 'c>,
LL | |     T::AssocType: 'a,
   | |_____________________^
   |
   = note: defining type: projection_outlives::<'_#1r, '_#2r, '_#3r, T>

note: external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:70:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: elements_outlive1::<'_#1r, '_#2r, '_#3r, T>::{closure#0} with closure substs [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#4r ()>, T)),
               (),
           ]
   = note: number of external vids: 5
   = note: where <T as Anything<ReEarlyBound(1, 'b), ReEarlyBound(2, 'c)>>::AssocType: '_#4r

note: no external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:65:1
   |
LL | / fn elements_outlive1<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b, 'c>,
LL | |     'b: 'a,
   | |___________^
   |
   = note: defining type: elements_outlive1::<'_#1r, '_#2r, '_#3r, T>

note: external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:79:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: elements_outlive2::<'_#1r, '_#2r, '_#3r, T>::{closure#0} with closure substs [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#4r ()>, T)),
               (),
           ]
   = note: number of external vids: 5
   = note: where <T as Anything<ReEarlyBound(1, 'b), ReEarlyBound(2, 'c)>>::AssocType: '_#4r

note: no external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:74:1
   |
LL | / fn elements_outlive2<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b, 'c>,
LL | |     'c: 'a,
   | |___________^
   |
   = note: defining type: elements_outlive2::<'_#1r, '_#2r, '_#3r, T>

note: external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:87:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: two_regions::<'_#1r, T>::{closure#0} with closure substs [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#2r ()>, T)),
               (),
           ]
   = note: late-bound region is '_#3r
   = note: number of external vids: 4
   = note: where <T as Anything<ReEarlyBound(0, 'b), ReEarlyBound(0, 'b)>>::AssocType: '_#2r

note: no external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:83:1
   |
LL | / fn two_regions<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b, 'b>,
   | |________________________^
   |
   = note: defining type: two_regions::<'_#1r, T>

error: lifetime may not live long enough
  --> $DIR/projection-two-region-trait-bound-closure.rs:87:29
   |
LL | fn two_regions<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
   |                --  -- lifetime `'b` defined here
   |                |
   |                lifetime `'a` defined here
...
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ closure body requires that `'b` must outlive `'a`
   |
   = help: consider adding the following bound: `'b: 'a`

note: external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:97:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: two_regions_outlive::<'_#1r, '_#2r, T>::{closure#0} with closure substs [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#3r ()>, T)),
               (),
           ]
   = note: number of external vids: 4
   = note: where <T as Anything<ReEarlyBound(1, 'b), ReEarlyBound(1, 'b)>>::AssocType: '_#3r

note: no external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:92:1
   |
LL | / fn two_regions_outlive<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b, 'b>,
LL | |     'b: 'a,
   | |___________^
   |
   = note: defining type: two_regions_outlive::<'_#1r, '_#2r, T>

note: external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:109:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: one_region::<'_#1r, T>::{closure#0} with closure substs [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'_#2r ()>, T)),
               (),
           ]
   = note: number of external vids: 3
   = note: where <T as Anything<ReEarlyBound(0, 'a), ReEarlyBound(0, 'a)>>::AssocType: '_#2r

note: no external requirements
  --> $DIR/projection-two-region-trait-bound-closure.rs:101:1
   |
LL | / fn one_region<'a, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'a, 'a>,
   | |________________________^
   |
   = note: defining type: one_region::<'_#1r, T>

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0309`.
