error: lifetime may not live long enough
  --> $DIR/ref-mut-self.rs:11:9
   |
LL |     fn ref_self(&mut self, f: &u32) -> &u32 {
   |                 -             - let's call the lifetime of this reference `'1`
   |                 |
   |                 let's call the lifetime of this reference `'2`
LL |         f
   |         ^ associated function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`
   |
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn ref_self<'a>(&'a mut self, f: &'a u32) -> &u32 {
   |                ++++  ++               ++

error: lifetime may not live long enough
  --> $DIR/ref-mut-self.rs:18:9
   |
LL |     fn ref_Self(self: &mut Self, f: &u32) -> &u32 {
   |                       -             - let's call the lifetime of this reference `'1`
   |                       |
   |                       let's call the lifetime of this reference `'2`
LL |         f
   |         ^ associated function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`
   |
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn ref_Self<'a>(self: &'a mut Self, f: &'a u32) -> &u32 {
   |                ++++        ++               ++

error: lifetime may not live long enough
  --> $DIR/ref-mut-self.rs:23:9
   |
LL |     fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {
   |                               -              - let's call the lifetime of this reference `'1`
   |                               |
   |                               let's call the lifetime of this reference `'2`
LL |         f
   |         ^ associated function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`
   |
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn box_ref_Self<'a>(self: Box<&'a mut Self>, f: &'a u32) -> &u32 {
   |                    ++++            ++                ++

error: lifetime may not live long enough
  --> $DIR/ref-mut-self.rs:28:9
   |
LL |     fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {
   |                               -              - let's call the lifetime of this reference `'1`
   |                               |
   |                               let's call the lifetime of this reference `'2`
LL |         f
   |         ^ associated function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`
   |
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn pin_ref_Self<'a>(self: Pin<&'a mut Self>, f: &'a u32) -> &u32 {
   |                    ++++            ++                ++

error: lifetime may not live long enough
  --> $DIR/ref-mut-self.rs:33:9
   |
LL |     fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {
   |                                       -               - let's call the lifetime of this reference `'1`
   |                                       |
   |                                       let's call the lifetime of this reference `'2`
LL |         f
   |         ^ associated function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`
   |
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn box_box_ref_Self<'a>(self: Box<Box<&'a mut Self>>, f: &'a u32) -> &u32 {
   |                        ++++                ++                 ++

error: lifetime may not live long enough
  --> $DIR/ref-mut-self.rs:38:9
   |
LL |     fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {
   |                                       -               - let's call the lifetime of this reference `'1`
   |                                       |
   |                                       let's call the lifetime of this reference `'2`
LL |         f
   |         ^ associated function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`
   |
help: consider introducing a named lifetime parameter and update trait if needed
   |
LL |     fn box_pin_ref_Self<'a>(self: Box<Pin<&'a mut Self>>, f: &'a u32) -> &u32 {
   |                        ++++                ++                 ++

error: aborting due to 6 previous errors

