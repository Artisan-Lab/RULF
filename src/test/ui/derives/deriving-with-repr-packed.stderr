error: `Clone` can't be derived on this `#[repr(packed)]` struct with type or const parameters
  --> $DIR/deriving-with-repr-packed.rs:11:16
   |
LL | #[derive(Copy, Clone, Default, PartialEq, Eq)]
   |                ^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
note: the lint level is defined here
  --> $DIR/deriving-with-repr-packed.rs:1:9
   |
LL | #![deny(unaligned_references)]
   |         ^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `PartialEq` can't be derived on this `#[repr(packed)]` struct with type or const parameters
  --> $DIR/deriving-with-repr-packed.rs:11:32
   |
LL | #[derive(Copy, Clone, Default, PartialEq, Eq)]
   |                                ^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `Hash` can't be derived on this `#[repr(packed)]` struct that does not derive `Copy`
  --> $DIR/deriving-with-repr-packed.rs:19:19
   |
LL | #[derive(Default, Hash)]
   |                   ^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
   = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `Debug` can't be derived on this `#[repr(packed)]` struct that does not derive `Copy`
  --> $DIR/deriving-with-repr-packed.rs:39:10
   |
LL | #[derive(Debug, Default)]
   |          ^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
   = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 4 previous errors

Future incompatibility report: Future breakage diagnostic:
error: `Clone` can't be derived on this `#[repr(packed)]` struct with type or const parameters
  --> $DIR/deriving-with-repr-packed.rs:11:16
   |
LL | #[derive(Copy, Clone, Default, PartialEq, Eq)]
   |                ^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
note: the lint level is defined here
  --> $DIR/deriving-with-repr-packed.rs:1:9
   |
LL | #![deny(unaligned_references)]
   |         ^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

Future breakage diagnostic:
error: `PartialEq` can't be derived on this `#[repr(packed)]` struct with type or const parameters
  --> $DIR/deriving-with-repr-packed.rs:11:32
   |
LL | #[derive(Copy, Clone, Default, PartialEq, Eq)]
   |                                ^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
note: the lint level is defined here
  --> $DIR/deriving-with-repr-packed.rs:1:9
   |
LL | #![deny(unaligned_references)]
   |         ^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)

Future breakage diagnostic:
error: `Hash` can't be derived on this `#[repr(packed)]` struct that does not derive `Copy`
  --> $DIR/deriving-with-repr-packed.rs:19:19
   |
LL | #[derive(Default, Hash)]
   |                   ^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
note: the lint level is defined here
  --> $DIR/deriving-with-repr-packed.rs:1:9
   |
LL | #![deny(unaligned_references)]
   |         ^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)

Future breakage diagnostic:
error: `Debug` can't be derived on this `#[repr(packed)]` struct that does not derive `Copy`
  --> $DIR/deriving-with-repr-packed.rs:39:10
   |
LL | #[derive(Debug, Default)]
   |          ^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #82523 <https://github.com/rust-lang/rust/issues/82523>
note: the lint level is defined here
  --> $DIR/deriving-with-repr-packed.rs:1:9
   |
LL | #![deny(unaligned_references)]
   |         ^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

